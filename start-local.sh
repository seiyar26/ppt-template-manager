#!/bin/bash

# Fonction de nettoyage pour arr√™ter les processus au Ctrl+C
cleanup() {
  echo "Arr√™t des services..."
  kill $BACKEND_PID $FRONTEND_PID 2>/dev/null
  exit 0
}

# Gestionnaire d'erreurs
handle_error() {
  echo "\033[0;31mERREUR: $1\033[0m"
  exit 1
}

# V√©rifier PostgreSQL
echo "V√©rification de PostgreSQL..."
if ! brew services list | grep -q "postgresql.*started"; then
  echo "PostgreSQL n'est pas d√©marr√©, tentative de d√©marrage..."
  brew services start postgresql@14 || echo "‚ö†Ô∏è Impossible de d√©marrer PostgreSQL. V√©rifiez l'espace disque et les permissions."
  sleep 2
fi

# Variables d'environnement
export PORT=8080
export REACT_APP_API_URL=http://localhost:8080/api
export REACT_APP_API_PORT=8080
export CONVERT_API_SECRET=secret_KpZ4EmWSJCFOLYyX
export JWT_SECRET=your_jwt_secret_key_here

# R√©cup√©rer le nom d'utilisateur syst√®me pour PostgreSQL (sur macOS, l'utilisateur syst√®me est souvent l'utilisateur par d√©faut)
# Utiliser l'utilisateur courant pour PostgreSQL
DB_USER=$(whoami)
export DATABASE_URL=postgres://${DB_USER}:${DB_USER}@localhost:5432/ppt_template_manager
echo "Utilisation de l'utilisateur PostgreSQL: ${DB_USER}"

# Cr√©ation de la base de donn√©es si n√©cessaire
echo "V√©rification de la base de donn√©es..."
psql -c "SELECT 1 FROM pg_database WHERE datname='ppt_template_manager'" | grep -q 1 || \
  psql -c "CREATE DATABASE ppt_template_manager;" || \
  echo "‚ö†Ô∏è Impossible de cr√©er la base de donn√©es. Les services pourraient ne pas fonctionner correctement."

# D√©marrage du backend
echo "\033[0;34mD√©marrage du backend...\033[0m"
cd "$(dirname "$0")/backend"
npm start & 
BACKEND_PID=$!

echo "Backend d√©marr√© avec PID: $BACKEND_PID"
echo "Attente du d√©marrage du serveur backend..."
sleep 5

# V√©rification que le backend r√©pond
echo "Test de connexion au backend..."
if curl -s http://localhost:$PORT/api/health > /dev/null; then
  echo "‚úÖ Backend op√©rationnel!"
else
  echo "‚ö†Ô∏è Le backend ne r√©pond pas. V√©rifiez les journaux pour plus de d√©tails."
fi

# D√©marrage du frontend
echo "\033[0;34mD√©marrage du frontend...\033[0m"
cd "$(dirname "$0")/frontend"
npm start &
FRONTEND_PID=$!
echo "Frontend d√©marr√© avec PID: $FRONTEND_PID"

# Interception du signal d'interruption
trap cleanup SIGINT SIGTERM

echo "\033[0;32m‚úÖ Tous les services sont d√©marr√©s:\033[0m"
echo "üìã Backend: http://localhost:$PORT"
echo "üñ•Ô∏è Frontend: http://localhost:4322 (d√©fini dans votre package.json)"
echo "Pour arr√™ter tous les services, appuyez sur Ctrl+C"

# Maintenir le script en ex√©cution
wait $BACKEND_PID $FRONTEND_PID

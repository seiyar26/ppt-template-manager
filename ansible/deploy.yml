---
- name: Deploy PPT Template Manager
  hosts: webserver
  vars_files:
    - vars.yml
  tasks:
    - name: Ensure deploy directory exists
      file:
        path: "{{ deploy_path }}"
        state: directory
        mode: '0755'
      
    - name: Install required packages
      become: yes
      apt:
        name:
          - nodejs
          - npm
          - postgresql
          - postgresql-contrib
        state: present
        update_cache: yes
      
    - name: Create PostgreSQL database
      become: yes
      become_user: postgres
      postgresql_db:
        name: ppt_template_manager
        state: present
      
    - name: Create PostgreSQL user
      become: yes
      become_user: postgres
      postgresql_user:
        name: "{{ ansible_user }}"
        password: "{{ ansible_ssh_password }}"
        db: ppt_template_manager
        priv: ALL
        state: present
      
    - name: Copy backend files
      synchronize:
        src: ../backend/
        dest: "{{ deploy_path }}/backend"
        rsync_opts:
          - "--exclude=node_modules"
          - "--exclude=.env"
      
    - name: Copy frontend files
      synchronize:
        src: ../frontend/
        dest: "{{ deploy_path }}/frontend"
        rsync_opts:
          - "--exclude=node_modules"
      
    - name: Create backend .env file
      template:
        src: backend.env.j2
        dest: "{{ deploy_path }}/backend/.env"
        mode: '0644'
      
    - name: Install backend dependencies
      npm:
        path: "{{ deploy_path }}/backend"
        state: present
      
    - name: Install frontend dependencies
      npm:
        path: "{{ deploy_path }}/frontend"
        state: present
      
    - name: Build frontend
      shell: cd "{{ deploy_path }}/frontend" && npm run build
      
    - name: Setup PM2 for backend
      npm:
        name: pm2
        global: yes
        state: present
      become: yes
      
    - name: Start backend with PM2
      shell: cd "{{ deploy_path }}/backend" && pm2 start server.js --name ppt-backend
      args:
        creates: "{{ deploy_path }}/backend/pm2.pid"
      
    - name: Setup Nginx for frontend
      become: yes
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/ppt-template-manager
        mode: '0644'
      
    - name: Enable Nginx site
      become: yes
      file:
        src: /etc/nginx/sites-available/ppt-template-manager
        dest: /etc/nginx/sites-enabled/ppt-template-manager
        state: link
      
    - name: Restart Nginx
      become: yes
      service:
        name: nginx
        state: restarted
